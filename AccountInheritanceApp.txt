Account Class

package com.aurionpro.model;


public class Account {
    private int accountNumber;
    private String name;
    private double balance;

    public Account(int accountNumber, String name, double balance) {
        this.accountNumber = accountNumber;
        this.name = name;
        this.balance = balance;
    }
	

    public int getAccountNumber() {
		return accountNumber;
	}




	public void setAccountNumber(int accountNumber) {
		this.accountNumber = accountNumber;
	}




	public String getName() {
		return name;
	}




	public void setName(String name) {
		this.name = name;
	}




	public double getBalance() {
		return balance;
	}




	public void setBalance(double balance) {
		this.balance = balance;
	}




	public void display() {
        System.out.println("Account no: " + accountNumber);
        System.out.println("Name: " + name);
        System.out.println("Balance: " + balance);
    }


	public void credit(double amount) {
		if(amount>0) {
			setBalance(getBalance() + amount);
			System.out.println("Balance is " + getBalance());
		}
		else {
			System.out.println("Enter valid amount to credit.");
		}
		
	}


	public void debit(double amount) {
		if(amount>0) {
			if(amount>=balance) {
				setBalance(getBalance()-amount);
				System.out.println();
			}
			else {
				System.out.println("Please enter amount greater than your balance.");
			}
		}
			else {
				System.out.println("Enter valid debit amount and it should be greater than 0.");
			}
		}
		
CurrentAccount Class

package com.aurionpro.model;

public class CurrentAccount extends Account {
    private static final double OVER_DRAFT_LIMIT = -1000;

    public CurrentAccount(int accountNumber, String name, double balance) {
        super(accountNumber, name, balance);
    }

    @Override
    public void credit(double amount) {
        if (amount > 0) {
            setBalance(getBalance() + amount);
            System.out.println("New balance after credit: " + getBalance());
        } else {
            System.out.println("Please enter a valid amount to credit.");
        }
    }

    @Override
    public void debit(double amount) { //15000-1000=14000
        double availableBalance = getBalance() + OVER_DRAFT_LIMIT;
        
        if (amount > 0) {
            if (availableBalance >= amount) {
                setBalance(getBalance() - amount);
                System.out.println("New balance after debit: " + getBalance());
            } else {
                System.out.println("Exceeds overdraft limit.");
            }
        } else {
            System.out.println("Please enter a valid amount to debit.");
        }
    }

    @Override
    public void display() {
        super.display();
        System.out.println("Overdraft Limit: " + (-OVER_DRAFT_LIMIT)); 
    }
}


SavingsAccount Class


package com.aurionpro.model;

public class SavingsAccount extends Account {
    private static final double minimum_balance = 5000;

    public SavingsAccount(int accountNumber, String name, double balance) {
        super(accountNumber, name, balance);
 
    }

    public void credit(double amount) {
    	if(amount>0) {
    		setBalance(getBalance() + amount);
    		System.out.println("new balance after credit is " + getBalance());
    	}
    	else {
    		System.out.println("Enter valid amount to credit.");
    	}
    }

    public void debit(double amount) {
        if (getBalance() - amount >= minimum_balance) {
            setBalance(getBalance() - amount);
        } else {
            System.out.println("Cannot withdraw. Minimum balance must be maintained.");
        }
    }

    @Override
    public void display() {
        super.display();
        System.out.println("Minimum Balance: " + minimum_balance);
    }
}


AccountTest Class

public class AccountTest {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        CurrentAccount currentAccount = new CurrentAccount(1200, "Astha Singh", 20000);
        SavingsAccount savingsAccount = new SavingsAccount(1300, "Aagya Singh", 15000);

        while (true) {
            System.out.println("\nMenu:");
            System.out.println("1. Display Current Account Details");
            System.out.println("2. Display Savings Account Details");
            System.out.println("3. Credit Current Account");
            System.out.println("4. Debit Current Account");
            System.out.println("5. Credit Savings Account");
            System.out.println("6. Debit Savings Account");
            System.out.println("7. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    currentAccount.display();
                    break;
                case 2:
                    savingsAccount.display();
                    break;
                case 3:
                    System.out.print("Enter amount to credit in your current account: ");
                    double creditAmountCurrentAccount = scanner.nextDouble();
                    currentAccount.credit(creditAmountCurrentAccount);
                    break;
                case 4:
                    System.out.print("Enter amount to debit in your current account: ");
                    double debitAmountCurrentAccount = scanner.nextDouble();
                    currentAccount.debit(debitAmountCurrentAccount);
                    break;
                case 5:
                    System.out.print("Enter amount to credit in your savings account: ");
                    double creditAmountSavingsAccount = scanner.nextDouble();
                    savingsAccount.credit(creditAmountSavingsAccount);
                    break;
                case 6:
                    System.out.print("Enter amount to debit in your savings account: ");
                    double debitAmountSavingsAccount = scanner.nextDouble();
                    savingsAccount.debit(debitAmountSavingsAccount);
                    break;
                case 7:
                    System.out.println("Exiting..Thanks for using our application");
                    scanner.close();
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}


